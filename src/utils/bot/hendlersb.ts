import TelegramBot from "node-telegram-bot-api";
import connectDB from "@/database/db";
import User from "@/database/User";
import { setUser, users, UserStep } from "./store";
import { mainMenu } from "./keyboards";

const handleStart = async (bot: TelegramBot, msg: TelegramBot.Message) => {
  const chatId = msg.chat.id;

  setUser(chatId, { step: UserStep.AwaitContact });

  await bot.sendMessage(chatId, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üöÄ\n\n–î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–æ–º.", {
    reply_markup: {
      keyboard: [
        [{ text: "üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º", request_contact: true }],
      ],
      resize_keyboard: true,
      one_time_keyboard: true,
    },
  });
};

const handleContact = async (bot: TelegramBot, msg: TelegramBot.Message) => {
  const chatId = msg.chat.id;
  const phone = msg.contact?.phone_number || null;
  const name = msg.from?.first_name || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";

  if (!phone) {
    await handleStart(bot, msg);
    return 200;
  }

  await connectDB();
  let user = await User.findOne({ chatId });

  if (user) {
    await bot.sendMessage(
      chatId,
      "–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã! üéÆ",
      { reply_markup: mainMenu },
    );
    setUser(chatId, { step: null });

    return 200;
  }

  if (!user) {
    user = await User.create({
      name,
      phone,
      chatId,
      telegram: msg.from?.username,
    });
  }

  await bot.sendMessage(
    chatId,
    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∏–∫–Ω–µ–π–º (–∏–º—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤–∏–¥–Ω–æ –¥—Ä—É–≥–∏–º):",
  );

  setUser(chatId, { step: UserStep.AwaitNickname });

  return 200;
};

const hendleUserNickname = async (bot: TelegramBot, msg: TelegramBot.Message) => {
  const chatId = msg.chat.id;
  const text = msg.text?.trim();

  if (!text) {
    await bot.sendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º:");
    return 500;
  }

  await connectDB();
  const userDb = await User.findOne({ chatId });

  if (!userDb) {
    await bot.sendMessage(chatId, "–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å /start.");
    setUser(chatId, { step: null });
    return 500;
  }

  const user = users.get(chatId);

  if (user.step === "await_nickname") {
    await User.updateOne({ chatId }, { username: text });
    await bot.sendMessage(
      chatId,
      "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! üéÆ",
      { reply_markup: mainMenu },
    );
    setUser(chatId, { step: null });

    return 200;
  }

  await bot.sendMessage(
    chatId,
    "–ù–∏–∫–Ω–µ–π–º –º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –µ–≥–æ –∏–∑–º–µ–Ω–∏—Ç—å, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.",
    { reply_markup: mainMenu },
  );

  return 400;
};

const handleText = async (bot: TelegramBot, msg: TelegramBot.Message) => {
  const chatId = msg.chat.id;
  const text = msg.text?.trim() || "";

  if (text === "üë§ –ü—Ä–æ—Ñ–∏–ª—å") {
    await connectDB();
    const userDb = await User.findOne({ chatId });

    if (!userDb) {
      await bot.sendMessage(chatId, "–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å /start.");

      return 500;
    }

    const profile = `
    üë§ –ü—Ä–æ—Ñ–∏–ª—å:
      –ò–º—è: ${userDb.name}
      –ù–∏–∫–Ω–µ–π–º: ${userDb.username || "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"}
      –£—Ä–æ–≤–µ–Ω—å: ${userDb.lvl}
      –ë–∞–ª–ª—ã: ${userDb.points}
      –ë–∞–ª–∞–Ω—Å: ${userDb.balance} —Ä—É–±.
    `;

    await bot.sendMessage(chatId, profile, { reply_markup: mainMenu });

    return 200;
  }

  if (text === "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã") {
    const contactInfo = `
    üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã:
      –¢–µ–ª–µ—Ñ–æ–Ω: +7 (914) 935-84-04
      Telegram: https://t.me/sxgclub
      VK: https://vk.com/sxgameclub

      –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:
        10:00 ‚Äì 23:00
        23:00 ‚Äì 06:00 (–ø–æ –±—Ä–æ–Ω–∏, 18+)
      –ê–¥—Ä–µ—Å: –ø–ª. –ö–æ–ª—Ö–æ–∑–Ω–∞—è, 40 (–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ä—ã–Ω–æ–∫)
    `;

    await bot.sendMessage(
      chatId,
      contactInfo,
      {
        reply_markup: mainMenu,
        parse_mode: "HTML",
      },
    );

    await bot.sendLocation(chatId, 53.15457514877932, 103.06222622653196, {
      reply_markup: {
        inline_keyboard: [[
          { text: "–û—Ç–∫—Ä—ã—Ç—å –≤ Google Maps", url: "https://www.google.com/maps/place/SX+Game+Club+(%D0%9A%D0%BE%D0%BC%D0%BF%D1%8C%D1%8E%D1%82%D0%B5%D1%80%D0%BD%D1%8B%D0%B9+%D0%BA%D0%BB%D1%83%D0%B1)/@53.154535,103.0592151,17z/data=!4m12!1m5!3m4!2zNTPCsDA5JzE2LjMiTiAxMDPCsDAzJzQyLjQiRQ!8m2!3d53.154535!4d103.06179!3m5!1s0x5d06c72f33bd725d:0xbb899ba882d848d7!8m2!3d53.15441!4d103.0624827!16s%2Fg%2F11vscxnxjc?entry=ttu&g_ep=EgoyMDI1MDkyOC4wIKXMDSoASAFQAw%3D%3D" },
        ]],
      },
    });

    return 200;
  }

  if (text === "üíµ –¶–µ–Ω—ã") {
    await bot.sendPhoto(
      chatId,
      "https://t.me/sxgclub/7",
      { reply_markup: mainMenu },
    );

    return 200;
  }

  await bot.sendMessage(chatId, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ.", { reply_markup: mainMenu });

  return 400;
};

export {
  handleStart, handleContact, hendleUserNickname, handleText,
};
